{"ast":null,"code":"var _jsxFileName = \"D:\\\\fe3-final-main\\\\src\\\\theme.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Crear un contexto para el tema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Define los temas\nconst themes = {\n  light: {\n    background: 'white',\n    color: 'black'\n  },\n  dark: {\n    background: '#12121296',\n    color: 'white'\n  }\n};\n\n// Proveedor del contexto\nconst ThemeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n\n  // Función para cambiar el tema\n  const toggleTheme = () => {\n    setCurrentTheme(prevTheme => prevTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      currentTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para acceder al contexto del tema\n_s(ThemeProvider, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c = ThemeProvider;\nconst useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { ThemeProvider, useTheme };\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ThemeContext","themes","light","background","color","dark","ThemeProvider","_ref","_s","children","currentTheme","setCurrentTheme","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["D:/fe3-final-main/src/theme.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Crear un contexto para el tema\r\nconst ThemeContext = createContext();\r\n\r\n// Define los temas\r\nconst themes = {\r\n  light: {\r\n    background: 'white',\r\n    color: 'black',\r\n  },\r\n  dark: {\r\n    background: '#12121296',\r\n    color: 'white',\r\n  },\r\n};\r\n\r\n// Proveedor del contexto\r\nconst ThemeProvider = ({ children }) => {\r\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\r\n\r\n  // Función para cambiar el tema\r\n  const toggleTheme = () => {\r\n    setCurrentTheme((prevTheme) =>\r\n      prevTheme === themes.light ? themes.dark : themes.light\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ currentTheme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personalizado para acceder al contexto del tema\r\nconst useTheme = () => {\r\n  return useContext(ThemeContext);\r\n};\r\n\r\nexport { ThemeProvider, useTheme };\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,MAAMM,MAAM,GAAG;EACbC,KAAK,EAAE;IACLC,UAAU,EAAE,OAAO;IACnBC,KAAK,EAAE;EACT,CAAC;EACDC,IAAI,EAAE;IACJF,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE;EACT;AACF,CAAC;;AAED;AACA,MAAME,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAACK,MAAM,CAACC,KAAK,CAAC;;EAE9D;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBD,eAAe,CAAEE,SAAS,IACxBA,SAAS,KAAKZ,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACC,KACpD,CAAC;EACH,CAAC;EAED,oBACEH,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEL,YAAY;MAAEE;IAAY,CAAE;IAAAH,QAAA,EACzDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAX,EAAA,CAjBMF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAkBnB,MAAMe,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACrB,OAAOzB,UAAU,CAACG,YAAY,CAAC;AACjC,CAAC;AAACsB,GAAA,CAFID,QAAQ;AAId,SAASf,aAAa,EAAEe,QAAQ;AAAG,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module"}