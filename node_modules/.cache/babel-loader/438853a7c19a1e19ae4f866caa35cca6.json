{"ast":null,"code":"var _jsxFileName = \"D:\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\nexport const ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Implementa aquí la lógica personalizada de tu Context utilizando useMemo si es necesario\n  // Por ejemplo, puedes definir funciones y estados que quieras proporcionar a través del contexto\n\n  const contextValue = useMemo(() => {\n    return {\n      // Define los valores que deseas proporcionar en el contexto aquí\n      theme: initialState.theme,\n      data: initialState.data\n      // Agrega otras propiedades, funciones, estados, etc., según tus necesidades\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"JLzJfL3KLoV7bWTi3UEfulSv7uk=\");\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useMemo","jsxDEV","_jsxDEV","initialState","theme","data","ContextGlobal","ContextProvider","_ref","_s","children","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useMemo } from \"react\";\n\nexport const initialState = { theme: \"\", data: [] };\n\nexport const ContextGlobal = createContext(initialState);\n\nexport const ContextProvider = ({ children }) => {\n  // Implementa aquí la lógica personalizada de tu Context utilizando useMemo si es necesario\n  // Por ejemplo, puedes definir funciones y estados que quieras proporcionar a través del contexto\n\n  const contextValue = useMemo(() => {\n    return {\n      // Define los valores que deseas proporcionar en el contexto aquí\n      theme: initialState.theme,\n      data: initialState.data,\n      // Agrega otras propiedades, funciones, estados, etc., según tus necesidades\n    };\n  }, []);\n\n  return (\n    <ContextGlobal.Provider value={contextValue}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAG,CAAC;AAEnD,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACI,YAAY,CAAC;AAExD,OAAO,MAAMI,eAAe,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC1C;EACA;;EAEA,MAAMG,YAAY,GAAGX,OAAO,CAAC,MAAM;IACjC,OAAO;MACL;MACAI,KAAK,EAAED,YAAY,CAACC,KAAK;MACzBC,IAAI,EAAEF,YAAY,CAACE;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA,CAACI,aAAa,CAACM,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAD,QAAA,EACzCA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACR,EAAA,CAlBWF,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}