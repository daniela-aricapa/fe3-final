{"ast":null,"code":"var _jsxFileName = \"D:\\\\fe3-final-main\\\\src\\\\Routes\\\\Favs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Favs = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [dentists, setDentists] = useState([]);\n  useEffect(() => {\n    // Recupera los dentistas destacados del localStorage\n    const storedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    setFavorites(storedFavorites);\n\n    // Recupera todos los dentistas (puedes obtenerlos de tu fuente de datos)\n    // Por ahora, usaremos un array vacío ya que los datos provienen de la página de inicio\n    const exampleDentists = [];\n    setDentists(exampleDentists);\n  }, []);\n  const removeFromFavorites = id => {\n    // Elimina un dentista de los destacados\n    const updatedFavorites = favorites.filter(favoriteId => favoriteId !== id);\n    setFavorites(updatedFavorites);\n    // Actualiza el localStorage\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentists Favs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), favorites.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tienes dentistas destacados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: favorites.map(dentistId => {\n        // Busca el dentista correspondiente por su ID\n        const dentist = dentists.find(d => d.id === dentistId);\n        if (dentist) {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            dentist: dentist,\n            removeFromFavorites: () => removeFromFavorites(dentist.id)\n          }, dentist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this);\n        }\n        return null; // Si el dentista no se encuentra, no mostrar nada\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Favs, \"3LQvGSYOBafSPWdUskDvT58nvRI=\");\n_c = Favs;\nexport default Favs;\nvar _c;\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Favs","_s","favorites","setFavorites","dentists","setDentists","storedFavorites","JSON","parse","localStorage","getItem","exampleDentists","removeFromFavorites","id","updatedFavorites","filter","favoriteId","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","dentistId","dentist","find","d","_c","$RefreshReg$"],"sources":["D:/fe3-final-main/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\";\n\nconst Favs = () => {\n  const [favorites, setFavorites] = useState([]);\n  const [dentists, setDentists] = useState([]);\n\n  useEffect(() => {\n    // Recupera los dentistas destacados del localStorage\n    const storedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    setFavorites(storedFavorites);\n\n    // Recupera todos los dentistas (puedes obtenerlos de tu fuente de datos)\n    // Por ahora, usaremos un array vacío ya que los datos provienen de la página de inicio\n    const exampleDentists = [];\n    setDentists(exampleDentists);\n  }, []);\n\n  const removeFromFavorites = (id) => {\n    // Elimina un dentista de los destacados\n    const updatedFavorites = favorites.filter((favoriteId) => favoriteId !== id);\n    setFavorites(updatedFavorites);\n    // Actualiza el localStorage\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n\n  return (\n    <>\n      <h1>Dentists Favs</h1>\n      {favorites.length === 0 ? (\n        <p>No tienes dentistas destacados.</p>\n      ) : (\n        <div className=\"card-grid\">\n          {favorites.map((dentistId) => {\n            // Busca el dentista correspondiente por su ID\n            const dentist = dentists.find((d) => d.id === dentistId);\n            if (dentist) {\n              return (\n                <Card\n                  key={dentist.id}\n                  dentist={dentist}\n                  removeFromFavorites={() => removeFromFavorites(dentist.id)}\n                />\n              );\n            }\n            return null; // Si el dentista no se encuentra, no mostrar nada\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Favs;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3EP,YAAY,CAACG,eAAe,CAAC;;IAE7B;IACA;IACA,MAAMK,eAAe,GAAG,EAAE;IAC1BN,WAAW,CAACM,eAAe,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAIC,EAAE,IAAK;IAClC;IACA,MAAMC,gBAAgB,GAAGZ,SAAS,CAACa,MAAM,CAAEC,UAAU,IAAKA,UAAU,KAAKH,EAAE,CAAC;IAC5EV,YAAY,CAACW,gBAAgB,CAAC;IAC9B;IACAL,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACW,SAAS,CAACJ,gBAAgB,CAAC,CAAC;EACrE,CAAC;EAED,oBACEjB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBrB,SAAS,CAACsB,MAAM,KAAK,CAAC,gBACrB3B,OAAA;MAAAsB,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtC1B,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAN,QAAA,EACvBjB,SAAS,CAACwB,GAAG,CAAEC,SAAS,IAAK;QAC5B;QACA,MAAMC,OAAO,GAAGxB,QAAQ,CAACyB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACjB,EAAE,KAAKc,SAAS,CAAC;QACxD,IAAIC,OAAO,EAAE;UACX,oBACE/B,OAAA,CAACF,IAAI;YAEHiC,OAAO,EAAEA,OAAQ;YACjBhB,mBAAmB,EAAEA,CAAA,KAAMA,mBAAmB,CAACgB,OAAO,CAACf,EAAE;UAAE,GAFtDe,OAAO,CAACf,EAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGhB,CAAC;QAEN;QACA,OAAO,IAAI,CAAC,CAAC;MACf,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACtB,EAAA,CAhDID,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAkDV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}