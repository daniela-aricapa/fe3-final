{"ast":null,"code":"var _jsxFileName = \"D:\\\\fe3-final-main\\\\src\\\\Routes\\\\Favs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Favs = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    // Recupera los dentistas destacados del localStorage\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n\n  // Obtén la lista completa de dentistas desde algún recurso (puede ser una API)\n  // Aquí usaremos un array de ejemplo\n  const allDentists = [{\n    id: 1,\n    name: \"Dentista 1\",\n    username: \"dentist1\"\n  }, {\n    id: 2,\n    name: \"Dentista 2\",\n    username: \"dentist2\"\n  }, {\n    id: 3,\n    name: \"Dentista 3\",\n    username: \"dentist3\"\n  }];\n\n  // Filtra los dentistas favoritos y muestra solo esos\n  const favoriteDentists = allDentists.filter(dentist => favorites.includes(dentist.id));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentists Favs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), favorites.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tienes dentistas destacados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: favoriteDentists.map(dentist => /*#__PURE__*/_jsxDEV(Card, {\n        dentist: dentist\n      }, dentist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Favs, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = Favs;\nexport default Favs;\nvar _c;\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Favs","_s","favorites","setFavorites","storedFavorites","JSON","parse","localStorage","getItem","allDentists","id","name","username","favoriteDentists","filter","dentist","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","_c","$RefreshReg$"],"sources":["D:/fe3-final-main/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from '../Components/Card';\n\nconst Favs = () => {\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    // Recupera los dentistas destacados del localStorage\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n\n  // Obtén la lista completa de dentistas desde algún recurso (puede ser una API)\n  // Aquí usaremos un array de ejemplo\n  const allDentists = [\n    { id: 1, name: \"Dentista 1\", username: \"dentist1\" },\n    { id: 2, name: \"Dentista 2\", username: \"dentist2\" },\n    { id: 3, name: \"Dentista 3\", username: \"dentist3\" },\n  ];\n\n  // Filtra los dentistas favoritos y muestra solo esos\n  const favoriteDentists = allDentists.filter((dentist) => favorites.includes(dentist.id));\n\n  return (\n    <>\n      <h1>Dentists Favs</h1>\n      {favorites.length === 0 ? (\n        <p>No tienes dentistas destacados.</p>\n      ) : (\n        <div className=\"card-grid\">\n          {favoriteDentists.map((dentist) => (\n            <Card\n              key={dentist.id}\n              dentist={dentist}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Favs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3EL,YAAY,CAACC,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,MAAMK,WAAW,GAAG,CAClB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAW,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAW,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAW,CAAC,CACpD;;EAED;EACA,MAAMC,gBAAgB,GAAGJ,WAAW,CAACK,MAAM,CAAEC,OAAO,IAAKb,SAAS,CAACc,QAAQ,CAACD,OAAO,CAACL,EAAE,CAAC,CAAC;EAExF,oBACEb,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBnB,SAAS,CAACoB,MAAM,KAAK,CAAC,gBACrBzB,OAAA;MAAAoB,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtCxB,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAN,QAAA,EACvBJ,gBAAgB,CAACW,GAAG,CAAET,OAAO,iBAC5BlB,OAAA,CAACF,IAAI;QAEHoB,OAAO,EAAEA;MAAQ,GADZA,OAAO,CAACL,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACpB,EAAA,CArCID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}