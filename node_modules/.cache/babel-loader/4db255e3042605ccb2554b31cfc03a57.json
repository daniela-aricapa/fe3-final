{"ast":null,"code":"var _jsxFileName = \"D:\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useMemo, useState } from \"react\";\n\n// Define el estado inicial del contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  theme: \"light\",\n  data: []\n};\n\n// Crea el contexto\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\n\n// Proveedor del contexto\nexport const GlobalContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Utiliza useState para gestionar el estado\n  const [globalState, setGlobalState] = useState(initialState);\n\n  // Implementa lógica personalizada si es necesario, por ejemplo, funciones para actualizar el estado\n\n  const updateTheme = newTheme => {\n    setGlobalState(prevState => ({\n      ...prevState,\n      theme: newTheme\n    }));\n  };\n\n  // Define los valores que deseas proporcionar en el contexto aquí\n  const contextValue = useMemo(() => {\n    return {\n      state: globalState,\n      updateTheme // Agrega aquí otras funciones o estados según tus necesidades\n    };\n  }, [globalState]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalContextProvider, \"Wp6+Td9K7YdlNEHA2VGVFQ17Zjw=\");\n_c = GlobalContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"names":["React","createContext","useMemo","useState","jsxDEV","_jsxDEV","initialState","theme","data","GlobalContext","GlobalContextProvider","_ref","_s","children","globalState","setGlobalState","updateTheme","newTheme","prevState","contextValue","state","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useMemo, useState } from \"react\";\n\n// Define el estado inicial del contexto\nconst initialState = { theme: \"light\", data: [] };\n\n// Crea el contexto\nexport const GlobalContext = createContext(initialState);\n\n// Proveedor del contexto\nexport const GlobalContextProvider = ({ children }) => {\n  // Utiliza useState para gestionar el estado\n  const [globalState, setGlobalState] = useState(initialState);\n\n  // Implementa lógica personalizada si es necesario, por ejemplo, funciones para actualizar el estado\n\n  const updateTheme = (newTheme) => {\n    setGlobalState((prevState) => ({\n      ...prevState,\n      theme: newTheme,\n    }));\n  };\n\n  // Define los valores que deseas proporcionar en el contexto aquí\n  const contextValue = useMemo(() => {\n    return {\n      state: globalState,\n      updateTheme, // Agrega aquí otras funciones o estados según tus necesidades\n    };\n  }, [globalState]);\n\n  return (\n    <GlobalContext.Provider value={contextValue}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAG,CAAC;;AAEjD;AACA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACK,YAAY,CAAC;;AAExD;AACA,OAAO,MAAMI,qBAAqB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChD;EACA,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACG,YAAY,CAAC;;EAE5D;;EAEA,MAAMU,WAAW,GAAIC,QAAQ,IAAK;IAChCF,cAAc,CAAEG,SAAS,KAAM;MAC7B,GAAGA,SAAS;MACZX,KAAK,EAAEU;IACT,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,YAAY,GAAGjB,OAAO,CAAC,MAAM;IACjC,OAAO;MACLkB,KAAK,EAAEN,WAAW;MAClBE,WAAW,CAAE;IACf,CAAC;EACH,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,oBACET,OAAA,CAACI,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAEH,YAAa;IAAAN,QAAA,EACzCA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,EAAA,CA1BWF,qBAAqB;AAAAiB,EAAA,GAArBjB,qBAAqB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}