{"ast":null,"code":"var _jsxFileName = \"D:\\\\fe3-final-main\\\\src\\\\Routes\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Components/Card';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [dentists, setDentists] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => setDentists(response.data)).catch(error => console.error('Error al obtener datos de los dentistas', error));\n\n    // Recupera los favoritos actuales del localStorage (si los hay)\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n  const isDentistInFavorites = id => {\n    return favorites.includes(id);\n  };\n  const addToFavorites = id => {\n    // Verifica si el dentista ya está en favoritos\n    if (!isDentistInFavorites(id)) {\n      // Si no está en favoritos, agrégalo\n      const updatedFavorites = [...favorites, id];\n\n      // Actualiza el localStorage con los nuevos favoritos\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n\n      // Actualiza el estado de favoritos en la página de inicio\n      setFavorites(updatedFavorites);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: dentists.map(dentist => /*#__PURE__*/_jsxDEV(Card, {\n        dentist: dentist,\n        addToFavorites: () => addToFavorites(dentist.id),\n        isFavorite: isDentistInFavorites(dentist.id)\n      }, dentist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"9DFoZ2W7fzeKumzASfZvXG/LhT8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Card","axios","jsxDEV","_jsxDEV","Home","_s","dentists","setDentists","favorites","setFavorites","get","then","response","data","catch","error","console","storedFavorites","JSON","parse","localStorage","getItem","isDentistInFavorites","id","includes","addToFavorites","updatedFavorites","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dentist","isFavorite","_c","$RefreshReg$"],"sources":["D:/fe3-final-main/src/Routes/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from '../Components/Card';\nimport axios from 'axios';\n\nconst Home = () => {\n  const [dentists, setDentists] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then((response) => setDentists(response.data))\n      .catch((error) => console.error('Error al obtener datos de los dentistas', error));\n\n    // Recupera los favoritos actuales del localStorage (si los hay)\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n\n  const isDentistInFavorites = (id) => {\n    return favorites.includes(id);\n  };\n\n  const addToFavorites = (id) => {\n    // Verifica si el dentista ya está en favoritos\n    if (!isDentistInFavorites(id)) {\n      // Si no está en favoritos, agrégalo\n      const updatedFavorites = [...favorites, id];\n\n      // Actualiza el localStorage con los nuevos favoritos\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n\n      // Actualiza el estado de favoritos en la página de inicio\n      setFavorites(updatedFavorites);\n    }\n  };\n\n  return (\n    <main className=\"light\">\n      <h1>Home</h1>\n      <div className=\"card-grid\">\n        {dentists.map((dentist) => (\n          <Card\n            key={dentist.id}\n            dentist={dentist}\n            addToFavorites={() => addToFavorites(dentist.id)}\n            isFavorite={isDentistInFavorites(dentist.id)}\n          />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdG,KAAK,CAACS,GAAG,CAAC,4CAA4C,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAKL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC,CAAC;;IAEpF;IACA,MAAME,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3EZ,YAAY,CAACQ,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,oBAAoB,GAAIC,EAAE,IAAK;IACnC,OAAOf,SAAS,CAACgB,QAAQ,CAACD,EAAE,CAAC;EAC/B,CAAC;EAED,MAAME,cAAc,GAAIF,EAAE,IAAK;IAC7B;IACA,IAAI,CAACD,oBAAoB,CAACC,EAAE,CAAC,EAAE;MAC7B;MACA,MAAMG,gBAAgB,GAAG,CAAC,GAAGlB,SAAS,EAAEe,EAAE,CAAC;;MAE3C;MACAH,YAAY,CAACO,OAAO,CAAC,WAAW,EAAET,IAAI,CAACU,SAAS,CAACF,gBAAgB,CAAC,CAAC;;MAEnE;MACAjB,YAAY,CAACiB,gBAAgB,CAAC;IAChC;EACF,CAAC;EAED,oBACEvB,OAAA;IAAM0B,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACrB3B,OAAA;MAAA2B,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb/B,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBxB,QAAQ,CAAC6B,GAAG,CAAEC,OAAO,iBACpBjC,OAAA,CAACH,IAAI;QAEHoC,OAAO,EAAEA,OAAQ;QACjBX,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACW,OAAO,CAACb,EAAE,CAAE;QACjDc,UAAU,EAAEf,oBAAoB,CAACc,OAAO,CAACb,EAAE;MAAE,GAHxCa,OAAO,CAACb,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA/CID,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}